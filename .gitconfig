[user]
	name = James Childers
	email = childers@railroad19.com
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = /Users/jchilders/.gitignore_global
	editor = nvim
  ; pager = less -X -F
[pager]
  ; https://github.com/so-fancy/diff-so-fancy
  diff = diff-so-fancy | less --tabs=1,5 -RFX
  show = diff-so-fancy | less --tabs=1,5 -RFX
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  l = log --color --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
  ll = log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --decorate --numstat
  st = status -sb
  di = diff
  dif = diff
  dff = diff
  cb = ! git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy
  co = checkout
  ci = commit
  br = branch
  sta = stash
  sw = switch
  wc = whatchanged

  # undo last commit
  undo = !git reset --hard remotes/origin/$(git rev-parse --abbrev-ref HEAD)
 
  # in case of accidental `git git status`
	git = !exec git

  # https://davidwalsh.name/pull-down-pr
  # usage: git pr 1234
	pr = "!f() { git fetch -fu origin refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"

  pr-clean = "!git checkout develop ; "
  
  ; git for-each-ref refs/heads/pr/* --format=\"%(refname)\" | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done

[merge]
	tool = vimdiff
[push]
	default = current
[diff]
  algorithm = patience
	tool = vimdiff
[rerere]
	enabled = true
[rebase]
  autoStash = true
