# Set the prefix to ^A.
unbind C-b
set -g prefix ^A

# Indeces (for session numbers in status bar, e.g.) starts from 1
set -g base-index 1

# Renumber windows when a window is closed
set -g renumber-windows on

# added per suggestions from :CheckHealth in neovim
set -g focus-events on
set -sg escape-time 10

# nvim's `:CheckHealth` may report this as being problematic. Ignore it.
set -g default-terminal "xterm-256color"

# visual notification of activity in other windows
set -g monitor-activity on
set -g visual-activity on

# vi-style controls for copy mode
setw -g mode-keys vi

# history
set -g history-limit 102400

# If on (the default), the client is detached when the session it is attached
# to is destroyed. If off, the client is switched to the most recently active
# of the remaining sessions.
set -g detach-on-destroy off

set -g status-interval 1
set -g automatic-rename on
set -g automatic-rename-format "#{b:pane_current_path}"

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi Space send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# As a general rule, lowercase bindings target windows while uppercase bindings target sessions
bind ^a last-window
bind c new-window -c '#{pane_current_path}' \; \
  split-window -h -c '#{pane_current_path}'
bind C new-session
bind k confirm-before "kill-window"
bind K confirm-before -p "Kill session?" "rename-session killme ; switch-client -n ; kill-session -t killme"
bind n next-window
bind N switch-client -n
bind p previous-window
bind P switch-client -p
bind r command-prompt "rename-window %%"
bind R command-prompt "rename-session %%"

# Open session switcher window. Unlike to built-in one, this one is full-screen.
bind s run-shell "tmux_session_switcher"

# bind S display-popup -E -w 70% -h 70% nvim -c ":set laststatus=0" -c ":set nonumber" -c ":set norelativenumber" -c ":Telescope tmux sessions quit_on_select=true"

# tmux set -g pane-border-lines double
# tmux set -g pane-border-lines heavy

# bind S set -w popup-border-lines none \; \
#   display-popup -E -w 70% -h 70% nvim -c ":setl filetype=terminal" -c ":set laststatus=0" -c ":set nonumber" -c ":set norelativenumber" -c ":lua require('tmux.sessions')sessions quit_on_select=true"

# tmux set -g status-left "foo" ; \
#   set -g status-right "bar"

# tmux display-popup -E -w 70% -h 70% nvim -c ":set laststatus=0" -c ":set nonumber" -c ":set norelativenumber" -c ":Telescope tmux sessions quit_on_select=true"

# Split window horizontally (i.e. there will be a vertical divider)
bind % split-window -h -c '#{pane_current_path}'

# Split window vertically (i.e. there will be a horizontal divider)
bind - split-window -v -c '#{pane_current_path}'

# Reload tmux.conf (g = "reload confiG")
bind g source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "Reloaded!"

set -g window-active-style 'bg=#000000'
set -g window-style 'bg=#202022'

# TODO: Make this dynamic based on whether or not a notch is present on the
# display. See `single_display` function in `aliases.zsh`
set-option -g status-position "bottom"

set -goq @left-left-text-color "colour0"
set -goq @left-left-main-color "colour39"
set -goq @left-right-main-color "colour4"
set -goq @left-separator ""
set -goq @prefix-triggered-color "colour167"
set -goq @theme-status-left-left "#[fg=#{@left-left-text-color}, bg=#{@left-left-main-color}]#{?client_prefix,#[bg=#{@prefix-triggered-color}],} #S #[fg=#{@left-left-main-color}, bg=#{@left-right-main-color}]#{?client_prefix,#[fg=#{@prefix-triggered-color}],}#{@left-separator}#[fg=#{@left-left-main-color}, bg=#{@left-right-main-color}]"

set -goq @current_git_branch "#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD | cut -c 1-30)"
set -goqF @theme-status-left-right "#[fg=#{@left-left-text-color}, bg=#{@left-right-main-color}] #{@current_git_branch} #[fg=#{@left-right-main-color}, bg=colour0]#{@left-separator}"

set -gF status-left "#{@theme-status-left-left}#{@theme-status-left-right}"
set -gF status-left-length "50"

set -g status-justify "centre"
set -g status-bg "colour233"
set -g status-fg "colour7"

set -goq @right-separator ""
set -gF status-right "#[fg=#{@left-right-main-color}, bg=colour233]#{@right-separator}#[fg=#{@left-left-text-color}, bg=#{@left-right-main-color}] %H:%M #[bg=#{@left-right-main-color}, fg=#{@left-left-main-color}]#{@right-separator}#[bg=#{@left-left-main-color}, fg=#{@left-left-text-color}] %a %b %d "
set -gF status-right-length "50"
