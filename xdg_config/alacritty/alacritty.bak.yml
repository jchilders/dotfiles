# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
# env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use 'alacritty' if it is
  # available, otherwise 'xterm-256color' is used.
  # TERM: xterm-256color-italic

# shell:
 # program: /usr/local/bin/zsh
 # args:
   # - --login
   # - -C
   # - 'tmux attach-session || exec tmux new-session'

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0
    # columns: 80
    # lines: 24

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  # dynamic_padding: false

  # Window decorations
  #
  # Available values:
  # - `full`: Window with title bar and title bar buttons
  # - `none`: Window without title bar, rounded corners, or drop shadow
  # - `transparent`: Window with title bar with transparent background and title
  #   bar buttons
  # - `buttonless`: Window with title bar with transparent background and no
  #   title bar buttons
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #     - buttonless: Title bar, transparent background and title bar buttons
  #     - transparent: Title bar, transparent background, but no title bar buttons
  decorations: full

  # When true, alacritty starts maximized.
  # startup_mode: 'Windowed'
  startup_mode: 'FullScreen'
  # startup_mode: 'SimpleFullscreen'
  # startup_mode: 'Maximized'

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 0

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    # family: Anonymice Nerd Font Mono
    family: Fantasque Sans Mono
    style: Regular

  # The bold font face
  bold:
    # family: Anonymice Nerd Font Mono
    family: Fantasque Sans Mono
    style: Bold

  # The italic font face
  italic:
    # family: Anonymice Nerd Font Mono
    family: Fantasque Sans Mono
    style: Italic

  # The bold italic font face
  bold_italic:
    # family: Anonymice Nerd Font Mono
    family: Fantasque Sans Mono
    style: Bold Italic

  # Point size of the font
  size: 14.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 1
    y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  # glyph_offset:
  #   x: 0
  #   y: 0

  # Thin stroke font rendering (OS X only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# https://github.com/alacritty/alacritty/wiki/Color-schemes

# Colors (Iceberg Dark)
schemes:
  default_dark: &dark
    cursor:
      text: '#ffffff'
      cursor: '#109010'

    primary:
      background: '#000000'
      foreground: '#d0d0ff'

    # Normal colors
    normal:
      black:   '#161821'
      red:     '#e27878'
      green:   '#b0ff72'
      yellow:  '#e2a478'
      blue:    '#84a0c6'
      magenta: '#a093c7'
      cyan:    '#89b8c2'
      white:   '#c6c8d1'

    # Bright colors
    bright:
      black:   '#6b7089'
      red:     '#f05050'
      green:   '#c0ca8e'
      yellow:  '#e9b189'
      blue:    '#5151ff'
      magenta: '#ada0d3'
      cyan:    '#2050ff'
      white:   '#d2d4de'

    tokyonight_night: &tokyo
      cursor:
        text: '#ffffff'
        cursor: '#10A010'

      primary:
        background: '0x000000'
        foreground: '0xc0caf5'

      # Normal colors
      normal:
        black:   '0x15161E'
        red:     '0xf7768e'
        green:   '0x9ece6a'
        yellow:  '0xe0af68'
        blue:    '0x7aa2f7'
        magenta: '0xbb9af7'
        cyan:    '0x7dcfff'
        white:   '0xa9b1d6'

      # Bright colors
      bright:
        black:   '0x15161E'
        red:     '0xf7768e'
        green:   '0x9ece6a'
        yellow:  '0xe0af68'
        blue:    '0x7aa2f7'
        magenta: '0xbb9af7'
        cyan:    '0x7dcfff'
        white:   '0xc0caf5'

      indexed_colors:
        - { index: 16, color: '0xff9e64' }
        - { index: 17, color: '0xdb4b4b' }
    
colors: *tokyo

  # # Normal colors
  # normal:
    # # black:   '#4e4e4e'
    # black:   '#000000'
    # red:     '#ff6c60'
    # green:   '#a8ff60'
    # yellow:  '#ffffb6'
    # blue:    '#96cbfe'
    # magenta: '#ff73fd'
    # cyan:    '#c6c5fe'
    # white:   '#eeeeee'

  # # Bright colors
  # bright:
    # black:   '#7c7c7c'
    # red:     '#ffb6b0'
    # green:   '#ceffab'
    # yellow:  '#ffffcb'
    # blue:    '#b5dcfe'
    # magenta: '#ff9cfe'
    # cyan:    '#dfdffe'
    # white:   '#ffffff'

# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 10
  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 0.0

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
# mouse_bindings:
  # - { mouse: Middle, action: PasteSelection }

# mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  # double_click: { threshold: 300 }
  # triple_click: { threshold: 300 }

  # # If this is `true`, the cursor is temporarily hidden when typing.
  # hide_when_typing: false

  # url:
    # # URL launcher
    # #
    # # This program is executed when clicking on a text which is recognized as a URL.
    # # The URL is always added to the command as the last parameter.
    # launcher: open

    # # URL modifiers
    # #
    # # These are the modifiers that need to be held down for opening URLs when clicking
    # # on them. The available modifiers are documented in the key binding section.
    # #modifiers: Control|Shift

# selection:
  # semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  # save_to_clipboard: true

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify
# a key and modifiers required to trigger it, terminal modes where the binding
# is applicable, and what should be done when the key binding fires. It can
# either send a byte sequnce to the running application (`chars`), execute
# a predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Example:
#   `- { key: V, mods: Command, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
# key_bindings:
  # - { key: L,         mods: Control,              action: None  }
  # - { key: L,         mods: Control,              chars: "\x14\x6c"  }
  # - { key: V,   mods: Command, action: Paste                        }
  # - { key: C,        mods: Command, action: Copy                         }
  # - { key: Paste,                   action: Paste                        }
  # - { key: Copy,                    action: Copy                         }
  # - { key: H,        mods: Command, action: Hide                         }
  # - { key: Q,        mods: Command, action: Quit                         }
  # - { key: W,        mods: Command, action: Quit                         }
  # - { key: NumpadEnter,             chars: "\n"                          }
  # - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  # - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  # - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  # - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  # - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  # - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  # - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  # - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  # - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  # - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  # - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  # - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  # - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  # - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  # - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  # - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  # - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  # - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  # - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  # - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
