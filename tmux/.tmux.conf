# Indeces (for session numbers in status bar, e.g.) starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# added per suggestion from :CheckHealth in neovim
set-option -g focus-events on

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# vi-style controls for copy mode
setw -g mode-keys vi

# history
set-option -g history-limit 102400
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
bind -n C-k clear-history # klear

unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi Space send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

bind C new-session
bind L choose-session
bind K confirm-before -p "Kill session?" "rename-session killme ; switch-client -n ; kill-session -t killme"

# tm_top_level="#{git rev-parsde --show-toplevel | ruby -F'/' -ane 'puts $F[-1]')"
# bind R rename-session

bind c new-window -c '#{pane_current_path}'
bind k confirm-before "kill-window"

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind s
bind s split-window -v -c '#{pane_current_path}' # Create new pane below
unbind %
bind % split-window -h -c '#{pane_current_path}'  # Create new pane to the right

unbind " "
bind " " next-window
unbind n
bind n next-window

unbind A
bind A command-prompt "rename-window %%"

unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

unbind w
bind w list-windows

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# redisplay ^L l 
unbind ^L
bind ^L refresh-client

unbind ^a
bind ^a last-window

# Reload ~/.tmux.conf
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

unbind '"'
bind '"' choose-window

set -g pane-border-style fg=colour23
set -g pane-active-border-style fg=colour119,bg=colour63

# set selection & window list colors
set-window-option -g mode-style fg=colour1,bg=colour66

# ----------------------
# Status Bar
# -----------------------
set -g status-interval 0                # set to 0 to fix nvim problem when hitting esc in vim
set -g status-interval 15               # set to 0 to fix nvim problem when hitting esc in vim
set -s escape-time 0                    # Fix neovim esc key delay

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity off

# for i in {0..255} ; do
  # printf "\x1b[38;5;${i}mcolour${i}\n"
# done

set -g default-terminal "screen-256color"

source ~/workspace/dotfiles/tmux/theme.tmux

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A

# set-hook after-split-window 'display-message "hello after-split-window";'
# set-hook after-new-window 'display-message "hello after-new-window";'
