# The reattach-to-user-namespace is necessary to be able to contact ssh-agent
# via the SSH_AUTH_SOCK env var. This is also necessary to make pasteboard
# (clipboard) interaction work for programs run within the tmux server.
# see: https://github.com/tmux/tmux/issues/804
# see: https://github.com/tmux/tmux/issues/592
# set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"

# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

set-option -g history-limit 102400

# 256-color terminal
set-option -g default-terminal "screen-256color"
set-option -g default-shell $SHELL

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# vi-style controls for copy mode
setw -g mode-keys vi

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi Space send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
# Setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A

# Create session
bind C new-session
bind K confirm-before -p "Kill window?" "rename-session killme ; switch-client -n ; kill-session -t killme"
bind N switch-client -n
bind P switch-client -p

bind c new-window -c "#{pane_current_path}"
bind k confirm-before "kill-window"

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
unbind %
bind % split-window -h -c "#{pane_current_path}"

unbind " "
bind " " next-window
unbind n
bind n next-window

unbind A
bind A command-prompt "rename-window %%"

unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

unbind w
bind w list-windows

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# redisplay ^L l 
unbind ^L
bind ^L refresh-client

unbind ^a
bind ^a last-window

# Reload ~/.tmux.conf
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

unbind '"'
bind '"' choose-window

# set pane colors - highlight the active pane
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour241

set -g pane-border-fg colour22
set -g pane-active-border-fg colour119
set -g pane-active-border-bg colour234

# set selection & window list colors
set-window-option -g mode-bg colour60
set-window-option -g mode-fg colour17

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 0               # set to 0 to fix nvim problem when hitting esc in vim
set -s escape-time 0                   # Fix neovim esc key delay

set -g status-justify centre           # center window list for clarity

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity off

# set color for status bar
set-option -g status-bg colour235
set-option -g status-fg colour63
set-option -g status-attr dim 

# for i in {0..255} ; do
  # printf "\x1b[38;5;${i}mcolour${i}\n"
# done

set-window-option -g window-status-fg colour145
set-window-option -g window-status-bg colour236 
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg colour91
set-window-option -g window-status-current-bg colour170 
set-window-option -g window-status-current-attr bright

set -g status-left-length 70
set -g status-interval 15               # set to 0 to fix nvim problem when hitting esc in vim

# set left prompt to e.g. "branch@my_project"
set -g status-left "#[fg=colour91]#(cd #{pane_current_path}; pwd | awk -F/ '{print $5}')#[fg=colour145]@#[fg=colour170]#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)"

# <date> <time> / <timeCDT>
set -g status-right-length 60
set -g status-right "#[fg=cyan]%d %b %Y#[fg=green] #(date | awk '{print $4 $5}') / #(TZ=America/Chicago date | awk '{print $4 $5}')"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# <prefix> + ctrl-s to save, <prefix> + ctrl-r to restore
set -g @plugin 'tmux-plugins/tmux-resurrect'

# resurrect neovim sessions
set -g @resurrect-strategy-nvim 'session'

# set-hook after-split-window 'display-message "hello after-split-window";'
# set-hook after-new-window 'display-message "hello after-new-window";'
# set-hook after-new-window 'run "source /Users/jchilders/miniconda3/bin/activate";'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
